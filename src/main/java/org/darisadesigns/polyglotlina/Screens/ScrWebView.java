/*
 * Copyright (c) 2024, Draque Thompson, draquemail@gmail.com
 * All rights reserved.
 *
 * Licensed under: MIT License
 * See LICENSE.TXT included with this code to read the full license agreement.

 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
package org.darisadesigns.polyglotlina.Screens;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.io.File;
import javafx.application.Platform;
import javafx.embed.swing.JFXPanel;
import javafx.scene.Scene;
import javafx.scene.web.WebEngine;
import javafx.scene.web.WebView;
import javax.swing.JComponent;
import org.darisadesigns.polyglotlina.Desktop.CustomControls.PFrame;
import org.darisadesigns.polyglotlina.DictCore;

/**
 *
 * @author kelly
 */
public class ScrWebView extends PFrame {
    private final JFXPanel jfxPanel;
    private String url;
    private WebView webView;

    /**
     * Creates new form ScrWebView
     */
    public ScrWebView(DictCore _core, String pathToLoad, String title) {
        super(_core);
        url = pathToLoad;
        jfxPanel = new JFXPanel();
        initComponents();
        setTitle(title);
        
        Platform.runLater(()->{
            webView = new WebView();
            WebEngine engine = webView.getEngine();
            engine.load(url);
            Scene scene = new Scene(webView);
            
            jfxPanel.setScene(scene);
        });
        
        add(BorderLayout.CENTER, jfxPanel);
        
        backButton.addActionListener((ActionEvent e)->{
            goBack();
        });
        forwardButton.addActionListener((ActionEvent e)->{
            goForward();
        });
    }

    public ScrWebView(DictCore _core, File fileToLoad, String title) {
        this(_core, "file://" + fileToLoad.getAbsolutePath(), title);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        backButton = new javax.swing.JButton();
        forwardButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(20, 20));
        setPreferredSize(new java.awt.Dimension(500, 400));

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        backButton.setText("ðŸ ¬");
        jPanel1.add(backButton);

        forwardButton.setText("ðŸ ®");
        jPanel1.add(forwardButton);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void updateAllValues(DictCore _core) {
        if (core != _core) {
            core = _core;
        }
    }

    @Override
    public boolean canClose() {
        return true;
    }

    @Override
    public void saveAllValues() {
    }

    @Override
    public void addBindingToComponent(JComponent c) {
    }

    @Override
    public Component getWindow() {
        return this.getRootPane();
    }
    
    public void goBack() {
        Platform.runLater(()->{
            webView.getEngine().executeScript("history.back()");
        });
    }
    
    public void goForward() {
        Platform.runLater(()->{
            webView.getEngine().executeScript("history.forward()");
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton forwardButton;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
